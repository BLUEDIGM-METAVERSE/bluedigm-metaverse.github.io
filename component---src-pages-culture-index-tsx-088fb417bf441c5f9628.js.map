{"version":3,"file":"component---src-pages-culture-index-tsx-088fb417bf441c5f9628.js","mappings":"yQAgCA,MAxByD,SAAAA,GAQrD,IAR+D,MACjEC,EAAK,QACLC,EACAC,WACEC,iBAAiB,gBAAEC,GAAiB,UACpCC,GACD,KACDC,GACDP,EACC,OACEQ,EAAAA,EAAAA,GAAA,MAAIC,UAAU,iCACVD,EAAAA,EAAAA,GAACE,EAAAA,GAAI,CAACC,GAAIJ,IACNC,EAAAA,EAAAA,GAAA,OAAKC,UAAU,SACbD,EAAAA,EAAAA,GAAA,OAAKI,IAAKN,EAAWO,IAAKZ,MAE5BO,EAAAA,EAAAA,GAAA,WACIA,EAAAA,EAAAA,GAAA,UAAKP,IACLO,EAAAA,EAAAA,GAAA,UAAKN,KAKrB,ECAA,MApByD,SAAAF,GAErD,IAF+D,SACjEc,GACDd,EACC,OACEQ,EAAAA,EAAAA,GAAA,MAAIC,UAAU,yBACXK,EAASC,KACRC,IAAA,IACEC,MAAM,GACJC,EACAC,QAAQ,KAAEC,GAAM,YAChBC,IAEkBL,EAAA,OACpBR,EAAAA,EAAAA,GAACc,GAAWC,EAAAA,EAAAA,GAAA,GAAKF,EAAW,CAAEd,KAAMa,EAAOI,IAAKN,IAAM,IAKhE,ECXA,MAoBaO,EAAOA,OAEpB,MAtByD,SAAAzB,GAItD,IAHD0B,MACEC,mBAAmB,MAAEC,KAExB5B,EACC,OACEQ,EAAAA,EAAAA,GAACqB,EAAAA,EAAM,KAAC,KACNrB,EAAAA,EAAAA,GAAA,OAAKC,UAAU,kBACbD,EAAAA,EAAAA,GAAA,YAAM,aAERA,EAAAA,EAAAA,GAAA,OAAKC,UAAU,cACXD,EAAAA,EAAAA,GAAA,OAAKC,UAAU,QACXD,EAAAA,EAAAA,GAAA,OAAKC,UAAU,2CAA0C,WAAOD,EAAAA,EAAAA,GAAA,WAAM,eACtEA,EAAAA,EAAAA,GAACsB,EAAW,CAAChB,SAAUc,MAKrC,C","sources":["webpack://gatsby-starter-default/./src/components/culture/CultureItem.tsx","webpack://gatsby-starter-default/./src/components/culture/CultureList.tsx","webpack://gatsby-starter-default/./src/pages/culture/index.tsx"],"sourcesContent":["import { CultureFrontmatterType } from '../../types/culture.type'\r\nimport { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\nimport { Link } from 'gatsby'\r\n\r\ntype CultureItemProps = CultureFrontmatterType & { link: string}\r\n\r\nconst CultureItem: FunctionComponent<CultureItemProps> = function ({\r\n  title,\r\n  summary,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n    publicURL\r\n  },\r\n  link,\r\n}) {\r\n  return (\r\n    <li className=\"col-sm-4 col-md-12 col-lg-12\">\r\n        <Link to={link}>\r\n            <div className=\"thum\">\r\n              <img src={publicURL} alt={title} />\r\n            </div>\r\n            <dl>\r\n                <dt>{title}</dt>\r\n                <dd>{summary}</dd>\r\n            </dl>\r\n        </Link>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default CultureItem\r\n\r\n/**\r\n * Styled\r\n */\r\n\r\nconst PostItemWrapper = styled(Link)`\r\n  h2 {\r\n    font-family: 'Jalnan';\r\n    font-weight: 700;\r\n    font-size: 60px;\r\n    line-height: 72px;\r\n    letter-spacing: -0.006em;\r\n    color: #000000;\r\n    margin-bottom: 20px;\r\n  }\r\n\r\n  p {\r\n    font-size: 60px;\r\n    line-height: 72px;\r\n    letter-spacing: -0.006em;\r\n    color: #4d4d4d;\r\n  }\r\n`\r\n\r\nconst Thumbnail = styled(GatsbyImage)`\r\n  height: 700px;\r\n  margin-bottom: 40px;\r\n  object-fit: cover;\r\n`\r\n","import { CultureListItemType } from '../../types/culture.type'\r\nimport React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport CultureItem from 'components/culture/CultureItem'\r\nimport { getAllSlugs } from '../../utils/commonFunctions'\r\n\r\ntype CultureListProps = {\r\n  cultures: CultureListItemType[]\r\n}\r\n\r\nconst CultureList: FunctionComponent<CultureListProps> = function ({\r\n  cultures,\r\n}) {\r\n  return (\r\n    <ul className=\"row culture-list-wrap\">\r\n      {cultures.map(\r\n        ({\r\n          node: {\r\n            id,\r\n            fields: { slug },\r\n            frontmatter \r\n          } \r\n        }: CultureListItemType) => (\r\n          <CultureItem {...frontmatter} link={slug}  key={id} />\r\n        )\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default CultureList\r\n","import { CultureListItemType } from '../../types/culture.type'\r\nimport React, { FunctionComponent } from 'react'\r\nimport Layout from 'components/common/SubLayout'\r\nimport { graphql } from 'gatsby'\r\nimport CultureList from 'components/culture/CultureList'\r\n\r\ntype CulturePageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: CultureListItemType[]\r\n    }\r\n  }\r\n}\r\n\r\nconst CulturePage: FunctionComponent<CulturePageProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) {\r\n  return (\r\n    <Layout> {/* main */}\r\n      <div className=\"sub-keyvisual\">\r\n        <span>Culture</span>\r\n      </div>\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"col-sm-4 col-md-12 col-lg-12 sub-slogan\">문화를 만드는<br />땡큐 피플팀의 활약</div>\r\n              <CultureList cultures={edges} />\r\n          </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => {}\r\n\r\nexport default CulturePage\r\n\r\nexport const selectCultureList = graphql`\r\n  query selectCultureList {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/(culture)/\" } }\r\n      sort: [\r\n        { frontmatter: { startedDate: DESC } }\r\n        { frontmatter: { title: ASC } }\r\n      ]\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            summary\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 1560, height: 700)\r\n              }\r\n              publicURL\r\n            }\r\n            startedDate(formatString: \"YYYY.MM.DD.\")\r\n            endedDate(formatString: \"YYYY.MM.DD.\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"names":["_ref","title","summary","thumbnail","childImageSharp","gatsbyImageData","publicURL","link","___EmotionJSX","className","Link","to","src","alt","cultures","map","_ref2","node","id","fields","slug","frontmatter","CultureItem","_extends","key","Head","data","allMarkdownRemark","edges","Layout","CultureList"],"sourceRoot":""}