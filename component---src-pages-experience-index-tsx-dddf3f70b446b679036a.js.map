{"version":3,"file":"component---src-pages-experience-index-tsx-dddf3f70b446b679036a.js","mappings":"0QAuBA,MAf+D,YAM3D,IANqE,MACvEA,EACAC,WACEC,iBAAiB,gBAAEC,IACpB,KACDC,GACD,EACC,OACEC,EAAAA,EAAAA,GAACC,EAAqB,CAACC,GAAIH,IACzBC,EAAAA,EAAAA,GAACG,EAAS,CAACC,MAAON,EAAiBO,IAAI,0BACvCL,EAAAA,EAAAA,GAAAA,KAAAA,KAAKL,GAGX,EAOA,MAAMM,GAAwBK,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,oBAAXD,CAAY,ogBA0CpCH,GAAYG,EAAAA,EAAAA,GAAOE,EAAAA,EAAW,oBAAlBF,CAAmB,qECjDrC,MAZ+D,YAE3D,IAFqE,YACvEG,GACD,EACC,OACET,EAAAA,EAAAA,GAACU,EAAqB,KACnBD,EAAYE,KAAIC,IAAAA,IAAGC,MAAM,GAAEC,EAAE,YAAEC,IAAuC,SACrEf,EAAAA,EAAAA,GAACgB,GAAc,UAAKD,EAAW,CAAEhB,KAAM,cAAekB,IAAKH,IAAM,IAIzE,EAOA,MAAMJ,GAAqB,uICUdQ,EAAOA,OAEpB,MApB+D,SAAU,GAItE,IAHDC,MACEC,mBAAmB,MAAEC,KAExB,EACC,OACErB,EAAAA,EAAAA,GAACsB,EAAAA,EAAM,MACLtB,EAAAA,EAAAA,GAAAA,MAAAA,CAAKuB,UAAU,mBACfvB,EAAAA,EAAAA,GAAAA,MAAAA,CAAKuB,UAAU,cACXvB,EAAAA,EAAAA,GAAAA,MAAAA,CAAKuB,UAAU,QACXvB,EAAAA,EAAAA,GAAAA,MAAAA,CAAKuB,UAAU,2CAA0C,UAAM,kBAAM,aACrEvB,EAAAA,EAAAA,GAACwB,EAAc,CAACf,YAAaY,MAK3C,C","sources":["webpack://gatsby-starter-default/./src/components/experience/ExperienceItem.tsx","webpack://gatsby-starter-default/./src/components/experience/ExperienceList.tsx","webpack://gatsby-starter-default/./src/pages/experience/index.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { ExperienceFrontmatterType } from '../../types/experience.types'\nimport { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\ntype ExperienceItemProps = ExperienceFrontmatterType & { link: string }\n\nconst ExperienceItem: FunctionComponent<ExperienceItemProps> = function ({\n  title,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <ExperienceItemWrapper to={link}>\n      <Thumbnail image={gatsbyImageData} alt=\"Experience Thumbnail\" />\n      <h2>{title}</h2>\n    </ExperienceItemWrapper>\n  )\n}\n\nexport default ExperienceItem\n\n/**\n * Styled\n */\nconst ExperienceItemWrapper = styled(Link)`\n  position: relative;\n  height: 600px;\n  border: 1px solid #000000;\n  box-shadow: 8px 8px 0px #000000;\n  border-radius: 20px;\n  padding: 40px 36px;\n  overflow: hidden;\n\n  &:hover {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &::after {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(182, 88, 255, 0.8);\n      backdrop-filter: blur(10px);\n      content: '';\n    }\n\n    h2 {\n      position: relative;\n      font-size: 64px;\n      line-height: 72px;\n      z-index: 1;\n    }\n  }\n\n  h2 {\n    position: relative;\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 40px;\n    color: #ffffff;\n  }\n`\n\nconst Thumbnail = styled(GatsbyImage)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n`\n","import { ExperienceListItemType } from '../../types/experience.types'\nimport React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport ExperienceItem from 'components/experience/ExperienceItem'\n\ntype ExperienceListProps = {\n  experiences: ExperienceListItemType[]\n}\n\nconst ExperienceList: FunctionComponent<ExperienceListProps> = function ({\n  experiences,\n}) {\n  return (\n    <ExperienceListWrapper>\n      {experiences.map(({ node: { id, frontmatter } }: ExperienceListItemType) => (\n        <ExperienceItem {...frontmatter} link={'/experience'} key={id} />\n      ))}\n    </ExperienceListWrapper>\n  )\n}\n\nexport default ExperienceList\n\n/**\n * Styled\n */\nconst ExperienceListWrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 40px 16px;\n`\n","import { ExperienceListItemType } from '../../types/experience.types'\nimport React, { FunctionComponent } from 'react'\nimport Layout from 'components/common/Layout'\nimport styled from '@emotion/styled'\nimport { graphql } from 'gatsby'\nimport ExperienceList from 'components/experience/ExperienceList'\n\ntype ExperiencePageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: ExperienceListItemType[]\n    }\n  }\n}\n\nconst ExperiencePage: FunctionComponent<ExperiencePageProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  return (\n    <Layout>\n      <div className=\"sub-keyvisual\"></div>\n      <div className=\"container\">\n          <div className=\"row\">\n              <div className=\"col-sm-4 col-md-12 col-lg-12 sub-slogan\">좋은 경험은<br />나눌수록 커져요</div>\n              <ExperienceList experiences={edges} />\n          </div>\n      </div>\n    </Layout>\n  )\n}\n\nexport const Head = () => {}\n\nexport default ExperiencePage\n\nexport const selectExperienceList = graphql`\n  query selectExperienceList {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(experience)/\" } }\n      sort: [\n        { frontmatter: { startedDate: DESC } }\n        { frontmatter: { title: ASC } }\n      ]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            startedDate(formatString: \"YYYY.MM.\")\n            endedDate(formatString: \"YYYY.MM.\")\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 600)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"names":["title","thumbnail","childImageSharp","gatsbyImageData","link","___EmotionJSX","ExperienceItemWrapper","to","Thumbnail","image","alt","_styled","Link","GatsbyImage","experiences","ExperienceListWrapper","map","_ref2","node","id","frontmatter","ExperienceItem","key","Head","data","allMarkdownRemark","edges","Layout","className","ExperienceList"],"sourceRoot":""}