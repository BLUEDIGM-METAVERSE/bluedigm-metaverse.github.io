{"version":3,"file":"component---src-pages-index-tsx-2463fec3adaa5aaa2adb.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/main/KeyVisual.tsx","webpack://gatsby-starter-default/./src/components/main/Story.tsx","webpack://gatsby-starter-default/./src/components/main/Introduction.tsx","webpack://gatsby-starter-default/./src/components/main/Tech.tsx","webpack://gatsby-starter-default/./src/components/main/Culture.tsx","webpack://gatsby-starter-default/./src/components/main/Bx.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"sourcesContent":["import React from 'react'\nimport Image from '../../components/common/Image';\n\nconst KeyVisual: React.FC = () => {\n    return (\n        <>\n            <h2 className=\"visually-hidden\">가치를 만들어요</h2>\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-4 col-md-6 col-lg-6 m-slogan\">가치를<br />만들어요</div>\n                    <div className=\"col-sm-4 col-md-6 col-lg-6 m-photo\">\n                        <img src=\"https://pbs.twimg.com/media/FYq--YZVUAE_0bj?format=jpg&name=large\" alt=\"\" />\n                    </div>\n                </div>\n            </div>\n            <div className=\"bg-keyvisual\"></div>\n            <div className=\"img-gray\">\n                <Image path=\"/images/img_gray.webp\" alt=\"\" />\n            </div>\n            <div className=\"badge-culture\">\n                <Image path=\"/images/badge-culture.svg\" alt=\"문화\" />\n            </div>\n            <div className=\"badge-fun\">\n                <Image path=\"/images/badge-fun.svg\" alt=\"재미\" />\n            </div>\n            <div className=\"badge-teamwork\">\n                <Image path=\"/images/badge-teamwork.svg\" alt=\"팀워크\" />\n            </div>\n            <div className=\"object-wave\">\n                <Image path=\"/images/wave.svg\" alt=\"물결 오브젝트\" />\n            </div>\n            <div className=\"object-wave2\">\n                <Image path=\"/images/wave.svg\" alt=\"물결 오브젝트\" />\n            </div>\n            <div className=\"circle-line\"></div>\n            <div className=\"circle-line2\"></div>\n            <div className=\"circle-g\"></div>\n            <div className=\"circle-v\"></div>\n        </>\n    )\n  }\n  \n  export default KeyVisual","import React from 'react'\n\nconst Story: React.FC = () => {\n    return (\n        <>\n            <h2 className=\"visually-hidden\">우리팀의 이야기를 시작해 볼게요</h2>\n            <div className=\"story-slogan\">\n                <div className=\"overview\">프로젝트에 임하는 진심어린 자세와 마음가짐으로 우리만의 문화를 만들어가고 있어요</div>\n                <span><p>우리팀의</p><strong>이야기를 시작해</strong><p>볼게요</p></span>\n            </div>\n            <svg className=\"pulse\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\">\n                <circle id=\"Oval\" cx=\"512\" cy=\"512\" r=\"512\"></circle>\n                <circle id=\"Oval\" cx=\"512\" cy=\"512\" r=\"512\"></circle>\n                <circle id=\"Oval\" cx=\"512\" cy=\"512\" r=\"512\"></circle>\n            </svg>\n            <div className=\"bubble\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 121 103\" fill=\"none\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.4062 0C9.88401 0 0.40625 11.5286 0.40625 25.75V103C0.40625 88.7786 9.88401 77.25 25.4062 77.25H94.4062C109.928 77.25 120.406 65.7214 120.406 51.5V25.75C120.406 11.5286 109.928 0 94.4062 0H25.4062ZM32.4062 48.0005C36.2722 48.0005 39.4062 44.8665 39.4062 41.0005C39.4062 37.1345 36.2722 34.0005 32.4062 34.0005C28.5403 34.0005 25.4062 37.1345 25.4062 41.0005C25.4062 44.8665 28.5403 48.0005 32.4062 48.0005ZM67.4062 41.0005C67.4062 44.8665 64.2722 48.0005 60.4062 48.0005C56.5403 48.0005 53.4062 44.8665 53.4062 41.0005C53.4062 37.1345 56.5403 34.0005 60.4062 34.0005C64.2722 34.0005 67.4062 37.1345 67.4062 41.0005ZM88.4062 48.0005C92.2722 48.0005 95.4062 44.8665 95.4062 41.0005C95.4062 37.1345 92.2722 34.0005 88.4062 34.0005C84.5403 34.0005 81.4062 37.1345 81.4062 41.0005C81.4062 44.8665 84.5403 48.0005 88.4062 48.0005Z\" fill=\"currentColor\"/>\n                </svg>\n            </div>\n            <div className=\"bubble2\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 121 103\" fill=\"none\">\n                    <path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M25.4062 0C9.88401 0 0.40625 11.5286 0.40625 25.75V103C0.40625 88.7786 9.88401 77.25 25.4062 77.25H94.4062C109.928 77.25 120.406 65.7214 120.406 51.5V25.75C120.406 11.5286 109.928 0 94.4062 0H25.4062ZM32.4062 48.0005C36.2722 48.0005 39.4062 44.8665 39.4062 41.0005C39.4062 37.1345 36.2722 34.0005 32.4062 34.0005C28.5403 34.0005 25.4062 37.1345 25.4062 41.0005C25.4062 44.8665 28.5403 48.0005 32.4062 48.0005ZM67.4062 41.0005C67.4062 44.8665 64.2722 48.0005 60.4062 48.0005C56.5403 48.0005 53.4062 44.8665 53.4062 41.0005C53.4062 37.1345 56.5403 34.0005 60.4062 34.0005C64.2722 34.0005 67.4062 37.1345 67.4062 41.0005ZM88.4062 48.0005C92.2722 48.0005 95.4062 44.8665 95.4062 41.0005C95.4062 37.1345 92.2722 34.0005 88.4062 34.0005C84.5403 34.0005 81.4062 37.1345 81.4062 41.0005C81.4062 44.8665 84.5403 48.0005 88.4062 48.0005Z\" fill=\"currentColor\"/>\n                </svg>\n            </div>\n        </>\n    )\n  }\n  \n  export default Story","import React from 'react'\nimport Image from '../../components/common/Image';\n\nconst Introduction: React.FC = () => {\n    return (\n        <>\n            <h2 className=\"visually-hidden\">우리팀의 이야기를 시작해 볼게요</h2>\n            <div className=\"say\">우리는 자유롭게 의견을 나누고 수평적이며 다양성을 인정하고 서로 존중하며, 모두의 능력이 최대한 발휘되도록 책임을 다하는 팀문화와 최상의 환경을 조성합니다.우리는 자유롭게 의견을 나누고 수평적이며 다양성을 인정하고 서로 존중하며, 모두의 능력이 최대한 발휘되도록 책임을 다하는 팀문화와 최상의 환경을 조성합니다.</div>\n            <div className=\"img-hand\"><Image path=\"/images/img-hand.webp\" alt=\"손바닥이미지\" /></div>\n            <div className=\"bg\"></div>\n        </>\n    )\n  }\n  \n  export default Introduction","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport styled from '@emotion/styled'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nconst Tech: React.FC = () => {\n    const data = useStaticQuery(graphql`\n    query {\n        techs: allMarkdownRemark(\n          filter: { fileAbsolutePath: { regex: \"/(tech)/\" } }\n          sort: [\n            { frontmatter: { date: DESC } }\n            { frontmatter: { title: ASC } }\n          ]\n        ) {\n          edges {\n            node {\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                category\n                writer\n              }\n              excerpt\n            }\n          }\n        }\n        members : allMarkdownRemark(\n          filter: { fileAbsolutePath: { regex: \"/(member)/\" } }\n          sort: [{ frontmatter: { orderNum: ASC } }, { frontmatter: { name: ASC } }]\n        ) {\n          edges {\n            node {\n                id\n                fields {\n                    slug\n                }\n                frontmatter {\n                    name\n                    thumbnail {\n                        childImageSharp {\n                            gatsbyImageData\n                        }\n                    }\n                    department\n                    position\n                    duty\n                }\n            }\n          }\n        }\n      }\n  `);\n  \n    function getUser( writer: string ) {\n        const matchedMember = data.members.edges.find(({ node: memberNode }) => memberNode.frontmatter.name === writer);\n        return matchedMember? matchedMember.node.frontmatter.department + \"의 \" + matchedMember.node.frontmatter.duty : \"\"\n    }\n\n    return (\n        <>\n            <div className=\"tech-wrap\">\n                <div className=\"container\">\n                    <div className=\"row info\">\n                        <dl className=\"col-sm-4 col-md-6 col-lg-6 slogan\">\n                            <dt>우리의 기가막힌 노하우를 보여드릴게요</dt>\n                            <dd>모두의 가치를 더하기 위해 우리는 매일 소통하고 공유한 하나의 경험을 서로 나누어 더 많은 경험을 얻어가요.</dd>\n                            <dd>\n                                <a href=\"./tech.html\">더 많이 보고 싶어요\n                                    <span>\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 80 80\" fill=\"none\">\n                                            <path d=\"M10 5H73C74.1046 5 75 5.89543 75 7V70\" stroke=\"currentColor\" strokeWidth=\"10\" stroke-linecap=\"round\"/>\n                                            <path d=\"M6 75L55.5726 24.492C56.8271 23.2139 59 24.1021 59 25.893V64\" stroke=\"currentColor\" strokeWidth=\"10\" stroke-linecap=\"round\"/>\n                                        </svg>\n                                    </span>\n                                </a>\n                            </dd>\n                        </dl>\n                        <ul className=\"col-sm-4 col-md-6 col-lg-6 thum\">\n                            <li><img src=\"https://recruit.navercorp.com/share/tmplat/naver/img/slide/people/img_slide2_9.jpg\" alt=\"\" /></li>\n                            <li><img src=\"https://recruit.navercorp.com/share/tmplat/naver/img/people/bg_people_07.jpg\" alt=\"\" /></li>\n                            <li><img src=\"https://recruit.navercorp.com/share/tmplat/naver/img/culture/img_06_01.jpg\" alt=\"\" /></li>\n                        </ul>\n                    </div>\n                </div>\n                \n                <div className=\"list\">\n                    <ul>\n                        {data.techs.edges.map(({ node }) => (\n                        <li>\n                            <a href=\"./view.html\">\n                                <div className=\"card-top\">\n                                    <div className=\"tag\">\n                                        {node.frontmatter.category}\n                                        <span>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 80 80\" fill=\"none\">\n                                                <path d=\"M10 5H73C74.1046 5 75 5.89543 75 7V70\" stroke=\"currentColor\" strokeWidth=\"10\" stroke-linecap=\"round\"/>\n                                                <path d=\"M6 75L55.5726 24.492C56.8271 23.2139 59 24.1021 59 25.893V64\" stroke=\"currentColor\" strokeWidth=\"10\" stroke-linecap=\"round\"/>\n                                            </svg>\n                                        </span>\n                                    </div>\n                                    <dl>\n                                        <dt>{node.frontmatter.title}</dt>\n                                        <dd>{node.excerpt}</dd>\n                                    </dl>\n                                </div>\n                                <div className=\"card-bot\">\n                                    <img src=\"https://search.pstatic.net/common/?src=http%3A%2F%2Fblogfiles.naver.net%2FMjAyMzAxMjlfODEg%2FMDAxNjc0OTk5NzQxODI3.bsY8Pp096lvyHW58LhZN75yFCzKee2-uP0Xgi2vZjX8g.pGWyDF1uYPZltBU6lsY2c5STziIOiH5SDn0lKYvN-LAg.JPEG.gmldud3540%2FIMG_6904.jpg&type=a340\" alt=\"\" />\n                                    <span>\n                                        <p>{node.frontmatter.writer}</p>\n                                        <p>{getUser(node.frontmatter.writer)}</p>\n                                    </span>\n                                </div>\n                            </a>\n                        </li>\n                        )\n                        )}\n                    </ul>\n                </div>\n            </div>\n        </>\n    )\n  }\n  \n  export default Tech","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby'\nimport Image from '../../components/common/Image';\nimport styled from '@emotion/styled'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\nconst KeyVisual: React.FC = () => {\n    const cultures = useStaticQuery(graphql`\n    query {\n        allMarkdownRemark(\n          filter: { fileAbsolutePath: { regex: \"/(culture)/\" } }\n          sort: [\n            { frontmatter: { startedDate: DESC } }\n            { frontmatter: { title: ASC } }\n          ]\n        ) {\n          edges {\n            node {\n              id\n              fields {\n                slug\n              }\n              frontmatter {\n                title\n                summary\n                tag\n                thumbnail {\n                  childImageSharp {\n                    gatsbyImageData\n                  }\n                }\n                startedDate(formatString: \"YYYY.MM.DD.\")\n                endedDate(formatString: \"YYYY.MM.DD.\")\n              }\n            }\n          }\n        }\n      }\n  `);\n  \n    return (\n        <>\n            <h2 className=\"visually-hidden\">팀 문화 소개</h2>\n            <div className=\"container\">\n                <div className=\"symbol-txt\"><Image path=\"/images/symbol_txt.svg\" alt=\"\" /></div>\n                <div className=\"slogan\">\n                    <strong>우리팀은</strong>\n                    <p>일은 즐겁게~</p>\n                    <p>노는건 최선을 다해서~</p>\n                </div>\n                <div className=\"row black-box\">\n                    <dl className=\"col-sm-4 col-md-12 col-lg-12\">\n                        <dt>#블랙박스</dt>\n                        <dd>\n                            우리의 추억을 기록하고 공유해요~\n                            <a href=\"/culture\">더 많이 보고 싶어요\n                                <span>\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"100%\" height=\"100%\" viewBox=\"0 0 80 80\" fill=\"none\">\n                                        <path d=\"M10 5H73C74.1046 5 75 5.89543 75 7V70\" stroke=\"currentColor\" strokeWidth=\"10\" stroke-linecap=\"round\"/>\n                                        <path d=\"M6 75L55.5726 24.492C56.8271 23.2139 59 24.1021 59 25.893V64\" stroke=\"currentColor\" strokeWidth=\"10\" stroke-linecap=\"round\"/>\n                                    </svg>\n                                </span>\n                            </a>\n                        </dd>\n                    </dl>\n\n                    <ul className=\"row\">\n                        {cultures.allMarkdownRemark.edges.map(({ node }) => (\n                            <li className=\"col-sm-4 col-md-4 col-lg-4\">\n                                <a href=\"/culture/\">\n                                    <span>{node.frontmatter.tag}<p>{node.frontmatter.startedDate} ~ {node.frontmatter.endedDate}</p></span>\n                                    <strong>{node.frontmatter.title} {node.frontmatter.gatsbyImageData}</strong>\n                                    <Thumbnail image={node.frontmatter.thumbnail.childImageSharp.gatsbyImageData} alt={node.title} />\n                                </a>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n            <div className=\"who\">\n                <strong>우리는 누구일까요?</strong>\n                <div className=\"member\">\n                    <ul>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                        <li>\n                            <Image path=\"/images/mem-ssong.webp\" alt=\"송호민\" />\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    )\n  }\n  \nexport default KeyVisual\n\nconst Thumbnail = styled(GatsbyImage)`\n  height: 700px;\n  margin-bottom: 40px;\n  object-fit: cover;\n`","import React from 'react'\nimport Image from '../../components/common/Image';\n\nconst Bx: React.FC = () => {\n    return (\n        <>\n            <h2 className=\"visually-hidden\">BI 소개</h2>\n            <div className=\"container\">\n                <strong>함께 성장하고 개성 넘치는 우리다움</strong>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Overview</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">우리는 다양한 직군과 20대에서 50대까지 10명 이상의 매우 개성 넘치는 사람들로 이루어져 있어요~<br />그래서 우리만의 ‘우리다움’을 정립이 필요하다고 생각이 들었어요.</dd>\n                </dl>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Brand Strategy</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">우리를 브랜드화한다는 것은 ‘우리다움’을 정의하는 것에서부터 시작해야하기에 개성이 강하고 다양한 우리의 고유 본질을 파악하여 방향성을 정의한 후, 이에 따른 디자인 원칙과 에센스를 도출해야 한다고 생각하였어요.</dd>\n                </dl>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Brand Essence</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">우리는 항상 시끌벅적하고 의견을 나누기를 좋아하며 일도 노는 것도 최선을 다해서 즐기려고 하죠~<br />그리고 우리가 먼 훗날, 지금을 추억했을 때 고생하며 일했던 기억보다 즐거운 시간을 보내고 함께 성장했던 기억을 떠올렸으면 좋겠어요.<br />이런것들이 ‘함께 성장하는 좋은 사람들'이라는 우리의 고유 본질을 만들어요.</dd>\n                </dl>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Brand Definition</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">우리는 다양한 개성이 모여서 하나의 그룹이 되고 함께 성장해나가는 사람이에요.<br />그래서 각자의 개성이 모여 뭉치게 되면 결국 둥근 형태가 돼 듯 우리를 ‘원'으로 정의할 수 있어요.<p><Image path=\"/images/Frame 157.png\" alt=\"\" /></p></dd>\n                </dl>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Brand Core Value</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">따라서 우리를 즐거움, 화합 그리고 성장이라는 단어로 지칭할 수 있어요.<p><Image path=\"/images/Frame 159.png\" alt=\"\" /></p></dd>\n                </dl>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Brand Design Principle</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">\n                        <ul className=\"bdp\">\n                            <li>룰루랄라 😚<br />즐거움의 메타포<br />WAVE<p><Image path=\"/images/Frame 168.png\" alt=\"\" /></p></li>\n                            <li>손에 손잡고 🫶🏻<br />화합의 메타포<br />CIRCLE<p><Image path=\"/images/Ellipse 47.png\" alt=\"\" /></p></li>\n                            <li>점프 점프 🚀<br />성장의 메타포<br />EMBOSS<p><Image path=\"/images/Group 59.png\" alt=\"\" /></p></li>\n                        </ul>\n                    </dd>\n                </dl>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Color System</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">다양한 개성이 모였으니 보색을 분할하여 포인트 컬러로 사용하였고<br />모두가 모여 하나가 되면 결국 Black이 되니까 메인 컬러는 Black으로 사용해요.<p><Image path=\"/images/Group 96.png\" alt=\"\" /></p></dd>\n                </dl>\n                <dl className=\"row\">\n                    <dt className=\"col-sm-4 col-md-3 col-lg-3\">Logo System</dt>\n                    <dd className=\"col-sm-4 col-md-9 col-lg-9\">우리의 디자인 원칙인 둥글고 입체적인 메타포를 바탕으로 둥글고 굵은 글씨로 만들었으며<br />현실에 안주하지 않고 성장하기 위해 매일매일 한단계씩 나아가는 모습을 입체적으로 표현하여 우리다운 로고를 만들었어요.<p><Image path=\"/images/logo.svg\" alt=\"\" /></p><p><Image path=\"/images/symbol.svg\" alt=\"\" /></p></dd>\n                </dl>\n            </div>\n        </>\n    )\n  }\n  \n  export default Bx","import React, { FunctionComponent } from 'react'\n\nimport Layout from 'components/common/Layout'\nimport KeyVisual from 'components/main/KeyVisual'\nimport Story from 'components/main/Story'\nimport Introduction from 'components/main/Introduction'\nimport Tech from 'components/main/Tech'\nimport Culture from 'components/main/Culture'\nimport Bx from 'components/main/Bx'\nimport styled from '@emotion/styled'\n\ntype IndexPageProps = {}\n\nconst Section = styled.section``\n\nconst IndexPage: FunctionComponent<IndexPageProps> = function () {\n  return (\n    <Layout>\n      <Section className='main-keyvisual'>\n        <KeyVisual />\n      </Section>\n      <Section className='story-title'>\n        <Story />\n      </Section>\n      <Section className='introduction'>\n        <Introduction />\n      </Section>\n      <Section className='tech-main'>\n        <Tech />\n      </Section>\n      <Section className='culture-main'>\n        <Culture />\n      </Section>\n      <Section className='bx'>\n        <Bx />\n      </Section>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"names":["KeyVisual","___EmotionJSX","className","src","alt","Image","path","Story","viewBox","version","xmlns","id","cx","cy","r","width","height","fill","d","Introduction","Tech","data","useStaticQuery","href","stroke","strokeWidth","techs","edges","map","_ref2","node","frontmatter","category","title","excerpt","writer","matchedMember","members","find","_ref","memberNode","name","department","duty","getUser","cultures","allMarkdownRemark","tag","startedDate","endedDate","gatsbyImageData","Thumbnail","image","thumbnail","childImageSharp","_styled","GatsbyImage","Bx","Section","target","Layout","Culture"],"sourceRoot":""}