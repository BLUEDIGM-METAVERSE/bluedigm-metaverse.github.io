{"version":3,"file":"component---src-pages-projects-index-tsx-673f0f1d7d5f6e801cc9.js","mappings":"2QAuBA,MAfyD,YAMrD,IAN+D,MACjEA,EACAC,WACEC,iBAAiB,gBAAEC,IACpB,KACDC,GACD,EACC,OACEC,EAAAA,EAAAA,IAACC,EAAkB,CAACC,GAAIH,IACtBC,EAAAA,EAAAA,IAACG,EAAS,CAACC,MAAON,EAAiBO,IAAI,uBACvCL,EAAAA,EAAAA,IAAAA,KAAAA,KAAKL,GAGX,EAOA,MAAMM,GAAqBK,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,qBAAXD,CAAY,ogBA0CjCH,GAAYG,EAAAA,EAAAA,GAAOE,EAAAA,EAAW,qBAAlBF,CAAmB,qECjDrC,MAZyD,YAErD,IAF+D,SACjEG,GACD,EACC,OACET,EAAAA,EAAAA,IAACU,EAAkB,KAChBD,EAASE,KAAIC,IAAAA,IAAGC,MAAM,GAAEC,EAAE,YAAEC,IAAoC,SAC/Df,EAAAA,EAAAA,IAACgB,GAAW,UAAKD,EAAW,CAAEhB,KAAM,YAAakB,IAAKH,IAAM,IAIpE,EAOA,MAAMJ,GAAkB,sICRxB,MAsBaQ,EAAO,OAEpB,MAxByD,SAAU,GAIhE,IAHDC,MACEC,mBAAmB,MAAEC,KAExB,EACC,OACErB,EAAAA,EAAAA,IAACsB,EAAAA,EAAM,MACLtB,EAAAA,EAAAA,IAACuB,EAAS,MACRvB,EAAAA,EAAAA,IAACwB,EAAc,MACbxB,EAAAA,EAAAA,IAACyB,EAAa,MACZzB,EAAAA,EAAAA,IAAC0B,EAAO,4CAKV1B,EAAAA,EAAAA,IAAC2B,EAAW,CAAClB,SAAUY,MAKjC,EAMO,MAkCDE,GAAS,cAAAK,OAAAA,aAAA,EAAAC,KAAAA,UAAAC,OAAAA,wDAMTN,GAAc,kBAAAI,OAAAA,aAAA,KAEdH,GAAa,iBAAAG,OAAAA,aAAA,EAAAC,KAAAA,UAAAC,OAAAA,uDAMbJ,GAAO,aAAAE,OAAAA,aAAA,EAAAC,KAAAA,SAAAC,OAAAA,qI","sources":["webpack://gatsby-starter-default/./src/components/project/ProjectItem.tsx","webpack://gatsby-starter-default/./src/components/project/ProjectList.tsx","webpack://gatsby-starter-default/./src/pages/projects/index.tsx"],"sourcesContent":["import { Link } from 'gatsby'\nimport { ProjectFrontmatterType } from '../../types/project.types'\nimport { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\ntype ProjectItemProps = ProjectFrontmatterType & { link: string }\n\nconst ProjectItem: FunctionComponent<ProjectItemProps> = function ({\n  title,\n  thumbnail: {\n    childImageSharp: { gatsbyImageData },\n  },\n  link,\n}) {\n  return (\n    <ProjectItemWrapper to={link}>\n      <Thumbnail image={gatsbyImageData} alt=\"Project Thumbnail\" />\n      <h2>{title}</h2>\n    </ProjectItemWrapper>\n  )\n}\n\nexport default ProjectItem\n\n/**\n * Styled\n */\nconst ProjectItemWrapper = styled(Link)`\n  position: relative;\n  height: 600px;\n  border: 1px solid #000000;\n  box-shadow: 8px 8px 0px #000000;\n  border-radius: 20px;\n  padding: 40px 36px;\n  overflow: hidden;\n\n  &:hover {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    &::after {\n      position: absolute;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background: rgba(182, 88, 255, 0.8);\n      backdrop-filter: blur(10px);\n      content: '';\n    }\n\n    h2 {\n      position: relative;\n      font-size: 64px;\n      line-height: 72px;\n      z-index: 1;\n    }\n  }\n\n  h2 {\n    position: relative;\n    font-weight: 700;\n    font-size: 32px;\n    line-height: 40px;\n    color: #ffffff;\n  }\n`\n\nconst Thumbnail = styled(GatsbyImage)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n`\n","import { ProjectListItemType } from '../../types/project.types'\nimport React, { FunctionComponent } from 'react'\nimport styled from '@emotion/styled'\nimport ProjectItem from 'components/project/ProjectItem'\n\ntype ProjectListProps = {\n  projects: ProjectListItemType[]\n}\n\nconst ProjectList: FunctionComponent<ProjectListProps> = function ({\n  projects,\n}) {\n  return (\n    <ProjectListWrapper>\n      {projects.map(({ node: { id, frontmatter } }: ProjectListItemType) => (\n        <ProjectItem {...frontmatter} link={'/projects'} key={id} />\n      ))}\n    </ProjectListWrapper>\n  )\n}\n\nexport default ProjectList\n\n/**\n * Styled\n */\nconst ProjectListWrapper = styled.section`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 40px 16px;\n`\n","import { ProjectListItemType } from '../../types/project.types'\nimport React, { FunctionComponent } from 'react'\nimport Layout from 'components/common/Layout'\nimport styled from '@emotion/styled'\nimport { graphql } from 'gatsby'\nimport ProjectList from 'components/project/ProjectList'\n\ntype ProjectPageProps = {\n  location: {\n    search: string\n  }\n  data: {\n    allMarkdownRemark: {\n      edges: ProjectListItemType[]\n    }\n  }\n}\n\nconst ProjectPage: FunctionComponent<ProjectPageProps> = function ({\n  data: {\n    allMarkdownRemark: { edges },\n  },\n}) {\n  return (\n    <Layout>\n      <Container>\n        <ProjectSection>\n          <SectionHeader>\n            <Heading>\n              {`현재 진행중인\n                프로젝트 입니다`}\n            </Heading>\n          </SectionHeader>\n          <ProjectList projects={edges} />\n        </ProjectSection>\n      </Container>\n    </Layout>\n  )\n}\n\nexport const Head = () => {}\n\nexport default ProjectPage\n\nexport const selectProjectList = graphql`\n  query selectTechList {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(projects)/\" } }\n      sort: [\n        { frontmatter: { startedDate: DESC } }\n        { frontmatter: { title: ASC } }\n      ]\n    ) {\n      edges {\n        node {\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            startedDate(formatString: \"YYYY.MM.\")\n            endedDate(formatString: \"YYYY.MM.\")\n            thumbnail {\n              childImageSharp {\n                gatsbyImageData(width: 768, height: 600)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n/**\n * Styled\n */\nconst Container = styled.div`\n  max-width: 1558px;\n  margin: 0 auto;\n  padding-bottom: 127px;\n`\n\nconst ProjectSection = styled.section``\n\nconst SectionHeader = styled.header`\n  max-width: 941px;\n  padding: 76px 0;\n  margin-bottom: 120px;\n`\n\nconst Heading = styled.h1`\n  font-family: 'Jalnan';\n  font-weight: 700;\n  font-size: 130px;\n  line-height: 140px;\n  letter-spacing: -0.006em;\n  color: #000000;\n  white-space: pre-line;\n`\n"],"names":["title","thumbnail","childImageSharp","gatsbyImageData","link","___EmotionJSX","ProjectItemWrapper","to","Thumbnail","image","alt","_styled","Link","GatsbyImage","projects","ProjectListWrapper","map","_ref2","node","id","frontmatter","ProjectItem","key","Head","data","allMarkdownRemark","edges","Layout","Container","ProjectSection","SectionHeader","Heading","ProjectList","target","name","styles"],"sourceRoot":""}