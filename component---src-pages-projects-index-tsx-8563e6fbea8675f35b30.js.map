{"version":3,"file":"component---src-pages-projects-index-tsx-8563e6fbea8675f35b30.js","mappings":"0QAuBA,MAfyD,SAAAA,GAMrD,IAN+D,MACjEC,EACAC,WACEC,iBAAiB,gBAAEC,IACpB,KACDC,GACDL,EACC,OACEM,EAAAA,EAAAA,GAACC,EAAkB,CAACC,GAAIH,IACtBC,EAAAA,EAAAA,GAACG,EAAS,CAACC,MAAON,EAAiBO,IAAI,uBACvCL,EAAAA,EAAAA,GAAA,UAAKL,GAGX,EAOA,MAAMM,GAAqBK,EAAAA,EAAAA,GAAOC,EAAAA,GAAI,CAAAC,OAAA,aAAXF,CAAY,CAAAG,KAAA,SAAAC,OAAA,8eA0CjCP,GAAYG,EAAAA,EAAAA,GAAOK,EAAAA,EAAW,CAAAH,OAAA,aAAlBF,CAAmB,CAAAG,KAAA,UAAAC,OAAA,8CCjDrC,MAZyD,SAAAhB,GAErD,IAF+D,SACjEkB,GACDlB,EACC,OACEM,EAAAA,EAAAA,GAACa,EAAkB,KAChBD,EAASE,KAAIC,IAAA,IAAGC,MAAM,GAAEC,EAAE,YAAEC,IAAoCH,EAAA,OAC/Df,EAAAA,EAAAA,GAACmB,GAAWC,EAAAA,EAAAA,GAAA,GAAKF,EAAW,CAAEnB,KAAM,YAAasB,IAAKJ,IAAM,IAIpE,EAOA,MAAMJ,GAAkBP,EAAAA,EAAAA,GAAA,WAAAE,OAAA,YAAAF,CAAA,CAAAG,KAAA,UAAAC,OAAA,yECUXY,EAAOA,OAEpB,MApByD,SAAA5B,GAItD,IAHD6B,MACEC,mBAAmB,MAAEC,KAExB/B,EACC,OACEM,EAAAA,EAAAA,GAAC0B,EAAAA,EAAM,MACL1B,EAAAA,EAAAA,GAAA,OAAK2B,UAAU,mBACf3B,EAAAA,EAAAA,GAAA,OAAK2B,UAAU,cACX3B,EAAAA,EAAAA,GAAA,OAAK2B,UAAU,QACX3B,EAAAA,EAAAA,GAAA,OAAK2B,UAAU,2CAA0C,qBACzD3B,EAAAA,EAAAA,GAAC4B,EAAW,CAAChB,SAAUa,MAKrC,C","sources":["webpack://gatsby-starter-default/./src/components/project/ProjectItem.tsx","webpack://gatsby-starter-default/./src/components/project/ProjectList.tsx","webpack://gatsby-starter-default/./src/pages/projects/index.tsx"],"sourcesContent":["import { Link } from 'gatsby'\r\nimport { ProjectFrontmatterType } from '../../types/project.types'\r\nimport { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport { GatsbyImage } from 'gatsby-plugin-image'\r\n\r\ntype ProjectItemProps = ProjectFrontmatterType & { link: string }\r\n\r\nconst ProjectItem: FunctionComponent<ProjectItemProps> = function ({\r\n  title,\r\n  thumbnail: {\r\n    childImageSharp: { gatsbyImageData },\r\n  },\r\n  link,\r\n}) {\r\n  return (\r\n    <ProjectItemWrapper to={link}>\r\n      <Thumbnail image={gatsbyImageData} alt=\"Project Thumbnail\" />\r\n      <h2>{title}</h2>\r\n    </ProjectItemWrapper>\r\n  )\r\n}\r\n\r\nexport default ProjectItem\r\n\r\n/**\r\n * Styled\r\n */\r\nconst ProjectItemWrapper = styled(Link)`\r\n  position: relative;\r\n  height: 600px;\r\n  border: 1px solid #000000;\r\n  box-shadow: 8px 8px 0px #000000;\r\n  border-radius: 20px;\r\n  padding: 40px 36px;\r\n  overflow: hidden;\r\n\r\n  &:hover {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    &::after {\r\n      position: absolute;\r\n      top: 0;\r\n      left: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      background: rgba(182, 88, 255, 0.8);\r\n      backdrop-filter: blur(10px);\r\n      content: '';\r\n    }\r\n\r\n    h2 {\r\n      position: relative;\r\n      font-size: 64px;\r\n      line-height: 72px;\r\n      z-index: 1;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    position: relative;\r\n    font-weight: 700;\r\n    font-size: 32px;\r\n    line-height: 40px;\r\n    color: #ffffff;\r\n  }\r\n`\r\n\r\nconst Thumbnail = styled(GatsbyImage)`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n`\r\n","import { ProjectListItemType } from '../../types/project.types'\r\nimport React, { FunctionComponent } from 'react'\r\nimport styled from '@emotion/styled'\r\nimport ProjectItem from 'components/project/ProjectItem'\r\n\r\ntype ProjectListProps = {\r\n  projects: ProjectListItemType[]\r\n}\r\n\r\nconst ProjectList: FunctionComponent<ProjectListProps> = function ({\r\n  projects,\r\n}) {\r\n  return (\r\n    <ProjectListWrapper>\r\n      {projects.map(({ node: { id, frontmatter } }: ProjectListItemType) => (\r\n        <ProjectItem {...frontmatter} link={'/projects'} key={id} />\r\n      ))}\r\n    </ProjectListWrapper>\r\n  )\r\n}\r\n\r\nexport default ProjectList\r\n\r\n/**\r\n * Styled\r\n */\r\nconst ProjectListWrapper = styled.section`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  grid-gap: 40px 16px;\r\n`\r\n","import { ProjectListItemType } from '../../types/project.types'\r\nimport React, { FunctionComponent } from 'react'\r\nimport Layout from 'components/common/SubLayout'\r\nimport styled from '@emotion/styled'\r\nimport { graphql } from 'gatsby'\r\nimport ProjectList from 'components/project/ProjectList'\r\n\r\ntype ProjectPageProps = {\r\n  location: {\r\n    search: string\r\n  }\r\n  data: {\r\n    allMarkdownRemark: {\r\n      edges: ProjectListItemType[]\r\n    }\r\n  }\r\n}\r\n\r\nconst ProjectPage: FunctionComponent<ProjectPageProps> = function ({\r\n  data: {\r\n    allMarkdownRemark: { edges },\r\n  },\r\n}) {\r\n  return (\r\n    <Layout>\r\n      <div className=\"sub-keyvisual\"></div>\r\n      <div className=\"container\">\r\n          <div className=\"row\">\r\n              <div className=\"col-sm-4 col-md-12 col-lg-12 sub-slogan\">현재 진행중인 프로젝트 입니다</div>\r\n              <ProjectList projects={edges} />\r\n          </div>\r\n      </div>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport const Head = () => {}\r\n\r\nexport default ProjectPage\r\n\r\nexport const selectProjectList = graphql`\r\n  query selectProjectList {\r\n    allMarkdownRemark(\r\n      filter: { fileAbsolutePath: { regex: \"/(projects)/\" } }\r\n      sort: [\r\n        { frontmatter: { startedDate: DESC } }\r\n        { frontmatter: { title: ASC } }\r\n      ]\r\n    ) {\r\n      edges {\r\n        node {\r\n          id\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            startedDate(formatString: \"YYYY.MM.\")\r\n            endedDate(formatString: \"YYYY.MM.\")\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(width: 768, height: 600)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"names":["_ref","title","thumbnail","childImageSharp","gatsbyImageData","link","___EmotionJSX","ProjectItemWrapper","to","Thumbnail","image","alt","_styled","Link","target","name","styles","GatsbyImage","projects","ProjectListWrapper","map","_ref2","node","id","frontmatter","ProjectItem","_extends","key","Head","data","allMarkdownRemark","edges","Layout","className","ProjectList"],"sourceRoot":""}